/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LinksRouteImport } from './routes/links'
import { Route as FurtherReadingRouteImport } from './routes/furtherReading'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TablePageNumRouteImport } from './routes/table.$pageNum'

const LinksRoute = LinksRouteImport.update({
  id: '/links',
  path: '/links',
  getParentRoute: () => rootRouteImport,
} as any)
const FurtherReadingRoute = FurtherReadingRouteImport.update({
  id: '/furtherReading',
  path: '/furtherReading',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TablePageNumRoute = TablePageNumRouteImport.update({
  id: '/table/$pageNum',
  path: '/table/$pageNum',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/furtherReading': typeof FurtherReadingRoute
  '/links': typeof LinksRoute
  '/table/$pageNum': typeof TablePageNumRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/furtherReading': typeof FurtherReadingRoute
  '/links': typeof LinksRoute
  '/table/$pageNum': typeof TablePageNumRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/furtherReading': typeof FurtherReadingRoute
  '/links': typeof LinksRoute
  '/table/$pageNum': typeof TablePageNumRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/furtherReading' | '/links' | '/table/$pageNum'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/furtherReading' | '/links' | '/table/$pageNum'
  id: '__root__' | '/' | '/furtherReading' | '/links' | '/table/$pageNum'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FurtherReadingRoute: typeof FurtherReadingRoute
  LinksRoute: typeof LinksRoute
  TablePageNumRoute: typeof TablePageNumRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/links': {
      id: '/links'
      path: '/links'
      fullPath: '/links'
      preLoaderRoute: typeof LinksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/furtherReading': {
      id: '/furtherReading'
      path: '/furtherReading'
      fullPath: '/furtherReading'
      preLoaderRoute: typeof FurtherReadingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/table/$pageNum': {
      id: '/table/$pageNum'
      path: '/table/$pageNum'
      fullPath: '/table/$pageNum'
      preLoaderRoute: typeof TablePageNumRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FurtherReadingRoute: FurtherReadingRoute,
  LinksRoute: LinksRoute,
  TablePageNumRoute: TablePageNumRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
